


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000         
    4 00000000         Exit_handler_mode
                               PROC
    5 00000000                 EXPORT           Exit_handler_mode
    6 00000000 4827            ldr              r0, =0xFFFFFFF9
    7 00000002 B401            push             {r0}
    8 00000004 B401            push             {r0}
    9 00000006 BD01            pop              {r0,pc}
   10 00000008         ;BX  r0
   11 00000008                 ENDP
   12 00000008         
   13 00000008         Context_switch_isr
                               PROC
   14 00000008                 EXPORT           Context_switch_isr
   15 00000008 E92D 0FF0       push             {r4-r11}
   16 0000000C         ;push {r12}
   17 0000000C F20F 0B3E       adr              r11, __switch_end_isr
   18 00000010         ;push {r12}
   19 00000010         ;push {lr}
   20 00000010         ;ldr  r10, =0xA1000000
   21 00000010 F3EF 8A02       mrs              r10, eapsr
   22 00000014 F04A 7A80       orr              r10, r10, #0x01000000
   23 00000018 F84D AD04       push             {r10}
   24 0000001C F84D BD04       push             {r11}
   25 00000020         ;push lr
   26 00000020 E92D 500F       push             {r0-r3,r12,lr}
   27 00000024         ;vpush   {s16-s31}
   28 00000024         ; MRS  r2, CONTROL
   29 00000024 F8C0 D000       str              sp, [r0]
   30 00000028 468D            mov              sp, r1
   31 0000002A 9806            ldr              r0, [sp, #24]
   32 0000002C F20F 0B1E       adr              r11, __switch_end_isr
   33 00000030 4558            cmp              r0, r11
   34 00000032 D001            beq              __to_handle_mode
   35 00000034 F8DF F068       ldr              pc, =0xFFFFFFF9
   36 00000038         __to_handle_mode
   37 00000038 E8BD 500F       pop              {r0-r3,r12,lr}
   38 0000003C BC10            pop              {r4}
   39 0000003E BC20            pop              {r5}
   40 00000040 F04F 7580       ldr              r5, =0x01000000
   41 00000044 F385 8806       msr              epsr, r5
   42 00000048 F3EF 8506       mrs              r5, epsr
   43 0000004C 46A7            mov              pc,r4
   44 0000004E         __switch_end_isr
   45 0000004E E8BD 0FF0       pop              {r4-r11}
   46 00000052 4770            bx               lr
   47 00000054         
   48 00000054         ;//  :
   49 00000054         ;//  : "m" (current_task->stack_pointer), "m" (next_task
                       ->stack_pointer)//, "m" (ctx->cpsr)
   50 00000054                 ENDP
   51 00000054         
   52 00000054         Context_switch
                               PROC
   53 00000054                 EXPORT           Context_switch
   54 00000054 E92D 0FF0       push             {r4-r11}
   55 00000058         ;push {r12}



ARM Macro Assembler    Page 2 


   56 00000058 F20F 0B20       adr              r11, __switch_end
   57 0000005C         ;push {r12}
   58 0000005C         ;push {lr}
   59 0000005C F04F 0A00       ldr              r10, =0x0
   60 00000060 F84D AD04       push             {r10}
   61 00000064 F84D BD04       push             {r11}
   62 00000068 E92D 500F       push             {r0-r3,r12,lr}
   63 0000006C F8C0 D000       str              sp, [r0]
   64 00000070 468D            mov              sp, r1
   65 00000072 E8BD 500F       pop              {r0-r3,r12,lr}
   66 00000076 BC10            pop              {r4}
   67 00000078 BC20            pop              {r5}
   68 0000007A 46A7            mov              pc, r4
   69 0000007C         __switch_end
   70 0000007C E8BD 0FF0       pop              {r4-r11}
   71 00000080 4770            bx               lr
   72 00000082         
   73 00000082         ; push {r12}
   74 00000082         ; adr  r12, __switch_end
   75 00000082         ; push {r12}
   76 00000082         ; push {lr}
   77 00000082         ; push {r0-r11}
   78 00000082         ; str  sp, [r0]
   79 00000082         ; mov  sp, r1
   80 00000082         ; pop  {r0-r11}
   81 00000082         ; pop  {lr}
   82 00000082         ; pop  {r12}
   83 00000082         ; mov  pc,r12
   84 00000082         ;__switch_end
   85 00000082         ; pop  {r12} 
   86 00000082         ; BX  lr
   87 00000082                 ENDP
   88 00000082         
   89 00000082         
   90 00000082         IntSaveDisableIRQ
                               PROC
   91 00000082                 EXPORT           IntSaveDisableIRQ
   92 00000082 B402            push             {r1}
   93 00000084 F04F 0101       ldr              r1,=0x1
   94 00000088 F3EF 8010       mrs              r0,PRIMASK
   95 0000008C F381 8810       msr              PRIMASK,r1
   96 00000090 BC02            pop              {r1}
   97 00000092 4770            BX               lr
   98 00000094                 ENDP
   99 00000094         IntRestoreIRQ
                               PROC
  100 00000094                 EXPORT           IntRestoreIRQ
  101 00000094 B401            push             {r0}
  102 00000096         ;ldr  r0,=0x0
  103 00000096 F380 8810       msr              PRIMASK,r0
  104 0000009A BC01            pop              {r0}
  105 0000009C 4770            BX               lr
  106 0000009E                 ENDP
  107 0000009E         
  108 0000009E                 END
              00 00 FFFFFFF9 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\Nan
oVM\context.d -o.\NanoVM\context.o -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\I
nclude -IC:\Keil\ARM\Inc\ST\STM32F4xx --predefine="__MICROLIB SETA 1" --list=.\



ARM Macro Assembler    Page 3 


NanoVM\context.lst ..\kernel\context.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file ..\kernel\context.s
   Uses
      None
Comment: .text unused
Context_switch 00000054

Symbol: Context_switch
   Definitions
      At line 52 in file ..\kernel\context.s
   Uses
      At line 53 in file ..\kernel\context.s
Comment: Context_switch used once
Context_switch_isr 00000008

Symbol: Context_switch_isr
   Definitions
      At line 13 in file ..\kernel\context.s
   Uses
      At line 14 in file ..\kernel\context.s
Comment: Context_switch_isr used once
Exit_handler_mode 00000000

Symbol: Exit_handler_mode
   Definitions
      At line 4 in file ..\kernel\context.s
   Uses
      At line 5 in file ..\kernel\context.s
Comment: Exit_handler_mode used once
IntRestoreIRQ 00000094

Symbol: IntRestoreIRQ
   Definitions
      At line 99 in file ..\kernel\context.s
   Uses
      At line 100 in file ..\kernel\context.s
Comment: IntRestoreIRQ used once
IntSaveDisableIRQ 00000082

Symbol: IntSaveDisableIRQ
   Definitions
      At line 90 in file ..\kernel\context.s
   Uses
      At line 91 in file ..\kernel\context.s
Comment: IntSaveDisableIRQ used once
__switch_end 0000007C

Symbol: __switch_end
   Definitions
      At line 69 in file ..\kernel\context.s
   Uses
      At line 56 in file ..\kernel\context.s
Comment: __switch_end used once
__switch_end_isr 0000004E

Symbol: __switch_end_isr



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 44 in file ..\kernel\context.s
   Uses
      At line 17 in file ..\kernel\context.s
      At line 32 in file ..\kernel\context.s

__to_handle_mode 00000038

Symbol: __to_handle_mode
   Definitions
      At line 36 in file ..\kernel\context.s
   Uses
      At line 34 in file ..\kernel\context.s
Comment: __to_handle_mode used once
9 symbols
343 symbols in table
